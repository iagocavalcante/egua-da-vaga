name: iOS Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install NativeScript CLI
        run: npm install -g nativescript@8.9.2

      - name: Setup CocoaPods
        run: sudo gem install cocoapods

      - name: Add iOS platform
        run: ns platform add ios

      - name: Install iOS dependencies
        run: |
          cd platforms/ios
          pod install

      - name: Import certificates and provisioning profiles
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        env:
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          # Create temporary keychain
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          
          # Import certificate
          echo "$IOS_CERTIFICATE_BASE64" | base64 -d > certificate.p12
          security import certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          
          # Import provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Build iOS Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: ns build ios --release --for-device --provision "${{ secrets.IOS_PROVISIONING_PROFILE_UUID }}"

      - name: Build iOS Debug (PR)
        if: github.event_name == 'pull_request'
        run: ns build ios

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        with:
          name: ios-ipa
          path: platforms/ios/build/Debug-iphoneos/*.ipa
          retention-days: 30

      - name: Publish to TestFlight
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        run: |
          # Save API key to file
          echo "$APP_STORE_CONNECT_API_KEY_CONTENT" > AuthKey.p8
          
          # Upload to TestFlight using xcrun altool
          xcrun altool --upload-app \
            --type ios \
            --file platforms/ios/build/Debug-iphoneos/*.ipa \
            --apiKey "$APP_STORE_CONNECT_API_KEY_ID" \
            --apiIssuer "$APP_STORE_CONNECT_API_ISSUER_ID"

      - name: Cleanup keychain
        if: always()
        run: |
          security delete-keychain build.keychain || true
          rm -f AuthKey.p8 || true